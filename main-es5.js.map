{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/config.assets.ts","webpack:///src/app/product-configurator/product-configurator.component.ts","webpack:///src/app/product-configurator/product-configurator.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","ASSETS","production","getImg","name","concat","ProductConfiguratorComponent","currentProduct","products","productLabel","top","left","color","text","size","font","map","p","split","clearFont","environment","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ProductConfiguratorComponent } from './product-configurator/product-configurator.component';\n\n\nconst routes: Routes = [\n  { path: '', component: ProductConfiguratorComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'product-configurator';\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ProductConfiguratorComponent } from './product-configurator/product-configurator.component';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProductConfiguratorComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { environment } from 'src/environments/environment';\r\n\r\nconst ASSETS = environment.production ? '/product-configurator/assets' : 'assets';\r\n\r\n\r\nexport const getImg = (name: string) => {\r\n    return ASSETS.concat(`/imgs/${name}`);\r\n};\r\n\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\nimport { getImg } from '../config.assets';\n\n@Component({\n  selector: 'app-product-configurator',\n  templateUrl: './product-configurator.component.html',\n  styleUrls: ['./product-configurator.component.scss']\n})\nexport class ProductConfiguratorComponent implements OnInit {\n  currentProduct = getImg('wallet-black.jpg')\n  products = [getImg('wallet-black.jpg'), getImg('wallet-brown.jpg')];\n\n  productLabel = {\n    top: 20,\n    left: 20,\n    color: 'white',\n    text: 'Name',\n    size: 14,\n    font: '',\n  }\n\n\n\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  select(path) {\n    this.currentProduct = path;\n  }\n\n  productDetails() {\n    return this.products.map(p => {\n      return {\n        color: p.split('.')[0].split('-')[1],\n        path: p\n      }\n    })\n  }\n\n\n  clearFont() {\n    this.productLabel.font = '';\n  }\n\n\n}\n","<link href=\"https://fonts.googleapis.com/css2?family=Bungee+Outline&family=Flavors&family=Indie+Flower&family=Miltonian+Tattoo&family=Plaster&display=swap\" rel=\"stylesheet\">\n\n\n\n<div class=\"container\">\n\n    <div class=\"col\">\n\n        <div class=\"img-container\">\n            <img [src]=\"currentProduct\">\n            <div class=\"img-mask\">\n                <div class=\"product-label\"\n                    style=\"position: absolute; margin-left:{{productLabel.left}}px; top:{{productLabel.top}}px; z-index:3; color:{{productLabel.color}}; font-size:{{productLabel.size}}pt; font-family:{{productLabel.font}}\">\n                    {{productLabel.text}}\n                </div>\n            </div>\n        </div>\n\n\n        <div>\n            <input type=\"text\" placeholder=\"ENTER NAME OR MESSAGE\" [(ngModel)]=\"productLabel.text\">\n        </div>\n        <div>\n\n            Verticle\n            <input type=\"range\" max=\"175\" min=\"10\" [(ngModel)]=\"productLabel.top\">\n        </div>\n        <div>\n            Horizontal\n            <input type=\"range\" max=\"175\" min=\"20\" [(ngModel)]=\"productLabel.left\">\n        </div>\n\n\n\n    </div>\n\n    <div class=\"col\">\n        <h3>Select Product Color</h3>\n        <div class=\"product-colors\">\n            <div [class]=\"product.color\" (click)=\"select(product.path)\"\n                [class.active-color]=\"currentProduct == product.path\" *ngFor=\"let product of productDetails()\">\n                {{product.color | uppercase}}\n            </div>\n        </div>\n\n        <h3>Configure Text</h3>\n        <div>\n            Text Color\n            <input type=\"color\" [(ngModel)]=\"productLabel.color\">\n        </div>\n        <div>\n            Font Family\n            <input type=\"text\" list=\"fonts\" [(ngModel)]=\"productLabel.font\" (click)=\"clearFont()\">\n            <datalist id=\"fonts\">\n                <option>'Bungee Outline', cursive</option>\n                <option>'Flavors', cursive</option>\n                <option>'Indie Flower', cursive</option>\n                <option>'Miltonian Tattoo', cursive</option>\n                <option>'Plaster', cursive</option>\n            </datalist>\n        </div>\n        <div>\n            Font Size\n            <input type=\"range\" min=\"4\" max=\"100\" [(ngModel)]=\"productLabel.size\">\n        </div>\n\n    </div>\n\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}