{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/canvas-samples/canvas-samples.component.ts","webpack:///src/app/canvas-samples/canvas-samples.component.html","webpack:///src/app/config.assets.ts","webpack:///src/app/product-configurator/product-configurator.component.ts","webpack:///src/app/product-configurator/product-configurator.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","useHash","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","CanvasSamplesComponent","config","source","style","x","y","width","height","text","font","startAngle","endAngle","Math","PI","clockwise","lineWidth","strokeStyle","radius","x1","y1","x2","y2","context","canvas","nativeElement","getContext","beginPath","fillStyle","rect","stroke","fill","closePath","arc","moveTo","lineTo","lineCap","img","Image","src","onload","drawImage","fillText","fillArc","fillRect","drawLine","drawImg","clearRect","render","clear","ASSETS","production","getImg","name","concat","ProductConfiguratorComponent","currentProduct","products","productLabel","top","left","color","size","letterSpacing","transform","imgContainer","addEventListener","window","open","toDataURL","map","p","split","environment","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ProductConfiguratorComponent } from './product-configurator/product-configurator.component';\nimport { CanvasSamplesComponent } from './canvas-samples/canvas-samples.component';\n\n\nconst routes: Routes = [\n  {\n    path: '', component: ProductConfiguratorComponent\n  },\n  { path: 'canvas', component: CanvasSamplesComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'product-configurator';\n}\n","<button [routerLink]=\"['']\" routerLinkActive=\"router-link-active\">Product Configurator</button>\r\n<button [routerLink]=\"['/canvas']\" routerLinkActive=\"router-link-active\">Canvas Toolbar</button>\r\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ProductConfiguratorComponent } from './product-configurator/product-configurator.component';\nimport { FormsModule } from '@angular/forms';\nimport { CanvasSamplesComponent } from './canvas-samples/canvas-samples.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProductConfiguratorComponent,\n    CanvasSamplesComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, ViewChild, ElementRef, AfterViewInit } from '@angular/core';\nimport { Content } from '@angular/compiler/src/render3/r3_ast';\nimport { getImg } from '../config.assets';\n\n@Component({\n  selector: 'app-canvas-samples',\n  templateUrl: './canvas-samples.component.html',\n  styleUrls: ['./canvas-samples.component.scss']\n})\nexport class CanvasSamplesComponent implements OnInit, AfterViewInit {\n\n  @ViewChild('canvas') canvas: ElementRef<HTMLCanvasElement>;\n\n  context: CanvasRenderingContext2D;\n\n  config: IConfig = {\n    source: 'arc',\n    style: '#00AA00',\n    x: 50,\n    y: 50,\n    width: 30,\n    height: 30,\n    text: '',\n    font: '',\n    startAngle: 0,\n    endAngle: Math.PI * 2,\n    clockwise: false,\n    lineWidth: 5,\n    strokeStyle: 'blue',\n    radius: 30,\n    x1: 50,\n    y1: 50,\n    x2: 100,\n    y2: 100,\n  }\n\n\n  constructor() { }\n  ngAfterViewInit(): void {\n    this.context = this.canvas.nativeElement.getContext('2d');\n  }\n\n\n\n\n  fillRect() {\n    this.context.beginPath();\n    this.context.fillStyle = this.config.style;\n    this.context.rect(this.config.x, this.config.y, this.config.width, this.config.height);\n    if (this.config.stroke) {\n      this.context.lineWidth = this.config.lineWidth;\n      this.context.strokeStyle = this.config.strokeStyle;\n      this.context.stroke();\n    }\n    this.context.fill();\n    this.context.closePath();\n  }\n\n\n  fillArc() {\n    this.context.fillStyle = this.config.style;\n\n    this.context.beginPath();\n    this.context.arc(this.config.x, this.config.y, this.config.radius,\n      this.config.startAngle, this.config.endAngle, this.config.clockwise);\n\n    if (this.config.stroke) {\n      this.context.lineWidth = this.config.lineWidth;\n      this.context.strokeStyle = this.config.strokeStyle;\n      this.context.stroke();\n    }\n    this.context.fill();\n    this.context.closePath();\n  }\n\n\n  drawLine() {\n\n    this.context.beginPath();\n    this.context.lineWidth = this.config.lineWidth;\n\n    this.context.fillStyle = this.config.style;\n    this.context.strokeStyle = this.config.strokeStyle;\n\n    this.context.moveTo(this.config.x1, this.config.y1);\n\n    this.context.lineTo(this.config.x2, this.config.y2);\n\n    this.context.stroke();\n\n    this.context.lineCap = 'round'\n\n\n\n    // this.context.closePath();\n\n\n  }\n\n  drawImg() {\n    const img = new Image();\n    img.src = getImg('wallet-brown.jpg');\n    img.onload = () => {\n\n      const x = 0;\n      const y = 0;\n\n      this.context.drawImage(img, 0, 0, 200, 200);\n      this.context.font = `14pt ${this.config.font}`;\n      this.context.fillStyle = this.config.style;\n      this.context.fillText(this.config.text, this.config.x, this.config.y);\n\n\n      this.context.closePath();\n\n    }\n  }\n\n\n  ngOnInit(): void {\n\n\n\n\n\n  }\n\n\n\n  render(): void {\n    switch (this.config.source) {\n\n      case 'arc':\n        this.fillArc();\n        break;\n\n      case 'rect':\n        this.fillRect();\n        break;\n\n      case 'line':\n        this.drawLine();\n        break;\n\n      case 'img':\n        this.drawImg();\n        break;\n    }\n\n  }\n\n  closePath() {\n    this.context.closePath();\n  }\n\n  beginPath() {\n    this.context.beginPath();\n  }\n\n  clear(): void {\n    this.context.clearRect(0, 0, 200, 200);\n  }\n\n\n}\nexport interface IConfig extends IRect, IArc {\n  source?: 'arc' | 'rect' | 'img' | 'video' | 'line';\n  text?: string;\n}\n\nexport interface IShape {\n  x1: number;\n  x2: number;\n  y1: number;\n  y2: number;\n  style?: string;\n  x?: number;\n  y?: number;\n  stroke?: boolean;\n  strokeStyle?: string;\n  lineWidth?: number;\n  font?: string;\n}\n\nexport interface IRect extends IShape {\n  width?: number;\n  height?: number;\n}\n\nexport interface IArc extends IShape {\n  radius?: number;\n  startAngle?: number;\n  endAngle?: number;\n  clockwise?: boolean;\n}","<link href=\"https://fonts.googleapis.com/css2?family=Shadows+Into+Light&display=swap\" rel=\"stylesheet\">\n<link\n    href=\"https://fonts.googleapis.com/css2?family=Bungee+Outline&family=Flavors&family=Indie+Flower&family=Miltonian+Tattoo&family=Plaster&display=swap\"\n    rel=\"stylesheet\">\n\n<div class=\"container\">\n\n    <div class=\"canvas-container\">\n        <h1>Canvas</h1>\n        <canvas #canvas width=\"200\" height=\"200\"></canvas>\n    </div>\n\n\n    <div class=\"tool-bar\">\n        <h1>Tool Bar</h1>\n        <div class=\"form-control\">\n            <span>Source</span>\n            <select name=\"source\" id=\"source\" [(ngModel)]=\"config.source\">\n                <option value=\"arc\" selected>Arc</option>\n                <option value=\"rect\">Rect</option>\n                <option value=\"line\">Line</option>\n                <option value=\"img\">Image</option>\n                <option value=\"video\">Video</option>\n            </select>\n        </div>\n\n        <div class=\"form-control\">\n            <span>Fill Color</span>\n            <input type=\"color\" [(ngModel)]=\"config.style\">\n        </div>\n        <div class=\"form-control\">\n            <span>Text</span>\n            <input type=\"text\" [(ngModel)]=\"config.text\">\n        </div>\n        <div class=\"form-control\">\n            <span> Font Family</span>\n\n            <select style=\"font-family:{{config.font}}; font-size:20pt; color:black;\"\n                [(ngModel)]=\"config.font\">\n                <option style=\"font-family:'Bungee Outline', cursive;\" value=\"'Bungee Outline', cursive\" selected>Font\n                </option>\n                <option style=\"font-family:'Flavors', cursive;\" value=\"'Flavors', cursive\">Font </option>\n                <option style=\"font-family:'Indie Flower', cursive;\" value=\"'Indie Flower', cursive\">Font </option>\n                <option style=\"font-family:'Miltonian Tattoo', cursive;\" value=\"'Miltonian Tattoo', cursive\">Font\n                </option>\n                <option style=\"font-family:'Plaster', cursive;\" value=\"'Plaster', cursive\">Font </option>\n            </select>\n        </div>\n\n\n\n\n        <div class=\"form-control\">\n            <div class=\"checkbox-group\">\n                <span>Stroke</span>\n                <input type=\"checkbox\" [(ngModel)]=\"config.stroke\">\n            </div>\n        </div>\n\n        <div class=\"stroke-group\">\n\n            <div class=\"form-control\" *ngIf=\"config.stroke\">\n                <span>Line Width</span>\n                <input type=\"range\" max=\"50\" min=\"0\" [(ngModel)]=\"config.lineWidth\">\n                <div class=\"badge\">{{config.lineWidth}}</div>\n            </div>\n            <div class=\"form-control\" *ngIf=\"config.stroke\">\n                <span>Stroke Color</span>\n                <input type=\"color\" [(ngModel)]=\"config.strokeStyle\">\n            </div>\n\n        </div>\n\n        <div class=\"location-group\" *ngIf=\"config.source != 'line'\">\n\n            <div class=\"form-control\">\n                <span>X</span>\n                <input type=\"range\" max=\"200\" min=\"0\" [(ngModel)]=\"config.x\">\n                <div class=\"badge\">{{config.x}}</div>\n            </div>\n\n            <div class=\"form-control\">\n                <span>Y</span>\n                <input type=\"range\" max=\"200\" min=\"0\" [(ngModel)]=\"config.y\">\n                <div class=\"badge\">{{config.y}}</div>\n            </div>\n\n        </div>\n\n        <div class=\"size-group\" *ngIf=\"config.source == 'rect'\">\n\n            <div class=\"form-control\">\n                <span>Width</span>\n                <input type=\"range\" max=\"150\" min=\"0\" [(ngModel)]=\"config.width\">\n                <div class=\"badge\">{{config.width}}</div>\n            </div>\n\n            <div class=\"form-control\">\n                <span>Height</span>\n                <input type=\"range\" max=\"150\" min=\"0\" [(ngModel)]=\"config.height\">\n                <div class=\"badge\">{{config.height}}</div>\n            </div>\n        </div>\n\n        <div class=\"line-group\" *ngIf=\"config.source =='line' \">\n\n            <div class=\"form-control line-input\">\n                <div class=\"point\">\n                    <span>X1</span>\n                    <input type=\"text\" max=\"100\" min=\"0\" [(ngModel)]=\"config.x1\">\n                </div>\n\n                <div class=\"point\">\n                    <span>Y1</span>\n                    <input type=\"text\" max=\"100\" min=\"0\" [(ngModel)]=\"config.y1\">\n                </div>\n\n                <div class=\"point\">\n                    <span>X2</span>\n                    <input type=\"text\" max=\"100\" min=\"0\" [(ngModel)]=\"config.x2\">\n                </div>\n\n                <div class=\"point\">\n                    <span>Y2</span>\n                    <input type=\"text\" max=\"100\" min=\"0\" [(ngModel)]=\"config.y2\">\n                </div>\n            </div>\n\n            <div class=\"form-control\">\n                <div class=\"badge\">{{config.y1}}</div>\n            </div>\n\n            <div class=\"form-control\">\n                <div class=\"badge\">{{config.x2}}</div>\n            </div>\n\n            <div class=\"form-control\">\n                <div class=\"badge\">{{config.y2}}</div>\n            </div>\n\n        </div>\n\n\n        <div class=\"form-control\" *ngIf=\"config.source == 'arc'\">\n            <span>Radius</span>\n            <input type=\"range\" max=\"100\" min=\"0\" [(ngModel)]=\"config.radius\">\n            <div class=\"badge\">{{config.radius}}</div>\n        </div>\n\n\n\n        <div class=\"form-control\">\n            <div class=\"button-group\">\n                <button (click)=\"render()\">Render</button>\n                <button (click)=\"closePath()\">Close Path</button>\n                <button (click)=\"beginPath()\">Begin Path</button>\n                <button (click)=\"clear()\">Clear</button>\n            </div>\n        </div>\n\n    </div>\n\n</div>","import { environment } from 'src/environments/environment';\r\n\r\nconst ASSETS = environment.production ? '/product-configurator/assets' : 'assets';\r\n\r\n\r\nexport const getImg = (name: string) => {\r\n    return ASSETS.concat(`/imgs/${name}`);\r\n};\r\n\r\n\r\n\r\n","import { Component, OnInit, AfterViewInit, ViewChild, ElementRef } from '@angular/core';\nimport { getImg } from '../config.assets';\n\n@Component({\n  selector: 'app-product-configurator',\n  templateUrl: './product-configurator.component.html',\n  styleUrls: ['./product-configurator.component.scss']\n})\nexport class ProductConfiguratorComponent implements OnInit, AfterViewInit {\n  currentProduct = getImg('wallet-black.jpg')\n  products = [getImg('wallet-black.jpg'), getImg('wallet-brown.jpg')];\n\n  productLabel = {\n    top: 20,\n    left: 20,\n    color: 'white',\n    text: 'Name',\n    size: 14,\n    font: `\\'Bungee Outline\\', cursive`,\n    letterSpacing: 0,\n    transform: 0\n  }\n\n\n\n  @ViewChild('imgCanvas') canvas: ElementRef<HTMLCanvasElement>;\n  @ViewChild('imgContainer') imgContainer: ElementRef<HTMLDivElement>;\n\n\n  constructor() { }\n\n  ngAfterViewInit(): void {\n    const context = this.canvas.nativeElement.getContext('2d');\n    this.imgContainer.nativeElement.addEventListener('click', () => {\n      window.open('', this.canvas.nativeElement.toDataURL());\n    })\n\n  }\n\n  ngOnInit(): void {\n  }\n\n  select(path) {\n    this.currentProduct = path;\n  }\n\n  productDetails() {\n    return this.products.map(p => {\n      return {\n        color: p.split('.')[0].split('-')[1],\n        path: p\n      }\n    })\n  }\n\n\n  clearFont() {\n    this.productLabel.font = '';\n  }\n\n\n}\n","<link\n    href=\"https://fonts.googleapis.com/css2?family=Bungee+Outline&family=Flavors&family=Indie+Flower&family=Miltonian+Tattoo&family=Plaster&display=swap\"\n    rel=\"stylesheet\">\n \n\n\n\n<div class=\"container\">\n\n    <div class=\"col\" >\n\n        <div class=\"img-container\" #imgContainer>\n            <img [src]=\"currentProduct\">\n            <div class=\"img-mask\">\n                <div class=\"product-label\"\n                    style=\"position: absolute; margin-left:{{productLabel.left}}px; top:{{productLabel.top}}px; z-index:3; color:{{productLabel.color}}; font-size:{{productLabel.size}}pt; font-family:{{productLabel.font}}; letter-spacing:{{productLabel.letterSpacing}}px; transform: rotate({{productLabel.transform}}deg);\">\n                    {{productLabel.text}}\n                </div>\n            </div>\n        </div>\n\n\n    </div>\n\n    <div class=\"col\">\n        <h3>Select Product Color</h3>\n        <div class=\"product-colors\">\n            <div  [class]=\"product.color\" (click)=\"select(product.path)\"\n                [class.active-color]=\"currentProduct == product.path\" *ngFor=\"let product of productDetails()\">\n                {{product.color | uppercase}}\n            </div>\n        </div>\n\n        <h3>Configure Text</h3>\n\n        <div class=\"form-control \">\n            <span>Text</span>\n            <input type=\"text\" placeholder=\"ENTER NAME OR MESSAGE\" [(ngModel)]=\"productLabel.text\">\n        </div>\n        <div class=\"form-control \">\n\n            <span>Verticle</span>\n            <input type=\"range\" max=\"300\" min=\"-30\" [(ngModel)]=\"productLabel.top\">\n        </div>\n        <div class=\"form-control \">\n            <span>Horizontal</span>\n            <input type=\"range\" max=\"300\" min=\"-30\" [(ngModel)]=\"productLabel.left\">\n        </div>\n\n        <div class=\"form-control\">\n            <span>Text Color</span>\n            <input type=\"color\" [(ngModel)]=\"productLabel.color\">\n        </div>\n        <div class=\"form-control\">\n            <span> Font Family</span>\n\n            <select style=\"font-family:{{productLabel.font}}; font-size:20pt; color:black;\"\n                [(ngModel)]=\"productLabel.font\">\n                <option style=\"font-family:'Bungee Outline', cursive;\" value=\"'Bungee Outline', cursive\" selected>Font\n                </option>\n                <option style=\"font-family:'Flavors', cursive;\" value=\"'Flavors', cursive\">Font </option>\n                <option style=\"font-family:'Indie Flower', cursive;\" value=\"'Indie Flower', cursive\">Font </option>\n                <option style=\"font-family:'Miltonian Tattoo', cursive;\" value=\"'Miltonian Tattoo', cursive\">Font\n                </option>\n                <option style=\"font-family:'Plaster', cursive;\" value=\"'Plaster', cursive\">Font </option>\n            </select>\n        </div>\n        <div class=\"form-control\">\n            <span>Font Size</span>\n            <input type=\"range\" min=\"4\" max=\"100\" [(ngModel)]=\"productLabel.size\">\n        </div>\n        <div class=\"form-control\">\n            <span>Letter Spacing</span>\n            <input type=\"range\" min=\"0\" max=\"100\" [(ngModel)]=\"productLabel.letterSpacing\">\n        </div>\n        <div class=\"form-control\">\n            <span>Text Transform</span>\n            <input type=\"range\" min=\"0\" max=\"500\" [(ngModel)]=\"productLabel.transform\">\n        </div>\n\n    </div>\n\n</div>\n\n\n\n\n\n<canvas #imgCanvas width=\"400\" height=\"400\">\n    <h1>Hello there</h1>\n</canvas>\n\n\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}